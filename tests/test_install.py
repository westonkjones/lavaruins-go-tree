import shutil
import sys


from pytest_dash.wait_for import (
    wait_for_text_to_equal,
    wait_for_element_by_css_selector
)

from pytest_dash.application_runners import import_app


def test_install(cookies, dash_threaded):
    results = cookies.bake(extra_context={
        'project_name': 'Test Component',
        'author_name': 'test',
        'author_email': 'test',
    })

    # Add the generated project to the path so it can be loaded from usage.py
    # It lies somewhere in a temp directory created by pytest-cookies
    sys.path.insert(0, str(results.project))

    selenium = dash_threaded.driver
    # Test that `usage.py` works after building the default component.
    dash_threaded(import_app('usage'))

    input_component = wait_for_element_by_css_selector(
        selenium,
        '#input > input'
    )
    input_component.clear()
    input_component.send_keys('Hello dash component')

    wait_for_text_to_equal(
        selenium,
        '#output',
        'You have entered Hello dash component'
    )

    node_modules = str(results.project.join('node_modules'))

    if sys.platform == 'win32':
        # Fix delete long names on windows.
        # pytest-cookies have trouble deleting some file generated by webpack.
        node_modules = '\\\\?\\' + node_modules

    shutil.rmtree(node_modules)
